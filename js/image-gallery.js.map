{"version":3,"sources":["image-gallery.js"],"names":["fitCaption","$c","$image","find","$caption","w","width","h","height","r","captionWidth","css","maxWidth","addClass","removeClass","image_gallery","$gallery","$","length","$grid","masonry","columnWidth","itemSelector","imagesLoaded","progress","$modals","magnificPopup","delegate","type","mainClass","tLoading","gallery","enabled","navigateByImgClick","preload","image","tError","verticalFit","titleSrc","item","el","html","on","e","instance","content"],"mappings":";;AAAA;;;;AAIA,IAAMA,aAAa,SAAbA,UAAa,CAACC,EAAD,EAAQ;AACzB,MAAMC,SAASD,GAAGE,IAAH,CAAQ,KAAR,CAAf;AACA,MAAMC,WAAWH,GAAGE,IAAH,CAAQ,YAAR,CAAjB;AACA,MAAME,IAAIH,OAAOI,KAAP,EAAV;AACA,MAAID,KAAK,CAAT,EAAY;AACV;AACD;AACD,MAAME,IAAIL,OAAOM,MAAP,EAAV;AACA,MAAMC,IAAIJ,IAAIE,CAAd;AACA,MAAMG,eAAgBL,IAAI,GAAL,GAAY,MAAZ,GAAqBA,CAA1C;;AAGAD,WAASO,GAAT,CAAa;AACXC,cAAUF;AADC,GAAb;;AAIA,MAAID,KAAK,CAAT,EAAY;AACVR,OAAGY,QAAH,CAAY,cAAZ;AACAZ,OAAGa,WAAH,CAAe,eAAf;AACD,GAHD,MAGO;AACLb,OAAGY,QAAH,CAAY,eAAZ;AACAZ,OAAGa,WAAH,CAAe,cAAf;AACD;AACF,CAvBD;;AAyBA,IAAMC,gBAAgB,SAAhBA,aAAgB,GAAM;AAC1B,MAAMC,WAAWC,EAAE,gBAAF,CAAjB;AACA,MAAID,SAASE,MAAT,GAAkB,CAAtB,EAAyB;;AAEzB;AACA,MAAMC,QAAQH,SAASI,OAAT,CAAiB;AAC7BC,iBAAa,6BADgB;AAE7BC,kBAAc;AAFe,GAAjB,CAAd;;AAKA;AACAH,QAAMI,YAAN,GAAqBC,QAArB,CAA8B,YAAM;AAClCL,UAAMC,OAAN,CAAc,QAAd;AACD,GAFD;;AAKA,MAAMK,UAAUT,SAASU,aAAT,CAAuB;AACrCC,cAAU,gCAD2B;AAErCC,UAAM,OAF+B;AAGrCC,eAAW,UAH0B;AAIrCC,cAAU,0BAJ2B;AAKrCC,aAAS;AACPC,eAAS;AADF,KAL4B;AAQrCC,wBAAoB,IARiB;AASrCC,aAAS,CAAC,CAAD,EAAI,CAAJ,CAT4B;AAUrCC,WAAO;AACLC,cAAQ,4DADH;AAELC,mBAAa,KAFR;AAGLC,gBAAU,kBAACC,IAAD,EAAU;AAClB,eAAOtB,EAAEsB,KAAKC,EAAP,EAAWrC,IAAX,CAAgB,YAAhB,EAA8BsC,IAA9B,EAAP;AACD;AALI;AAV8B,GAAvB,CAAhB;;AAmBAhB,UAAQiB,EAAR,CAAW,kDAAX,EAA+D,UAACC,CAAD,EAAO;AACpE,QAAI1B,EAAES,aAAF,CAAgBkB,QAApB,EAA8B;AAC5B5C,iBAAWiB,EAAES,aAAF,CAAgBkB,QAAhB,CAAyBC,OAApC;AACD;AACF,GAJD;AAKD,CAxCD","file":"image-gallery.js","sourcesContent":["/*\n * Image gallery has dependencies on jquery, slick, accessible-modal-window\n */\n\nconst fitCaption = ($c) => {\n  const $image = $c.find('img');\n  const $caption = $c.find('figcaption');\n  const w = $image.width();\n  if (w == 0) {\n    return;\n  }\n  const h = $image.height();\n  const r = w / h;\n  const captionWidth = (w < 300) ? '70vw' : w;\n\n\n  $caption.css({\n    maxWidth: captionWidth\n  });\n\n  if (r <= 1) {\n    $c.addClass('mfp-portrait');\n    $c.removeClass('mfp-landscape');\n  } else {\n    $c.addClass('mfp-landscape');\n    $c.removeClass('mfp-portrait');\n  }\n};\n\nconst image_gallery = () => {\n  const $gallery = $('.image-gallery');\n  if ($gallery.length < 1) return;\n\n  // Fire up the masonry layout\n  const $grid = $gallery.masonry({\n    columnWidth: '.image-gallery__block-sizer',\n    itemSelector: '.image-gallery__block'\n  });\n\n  // Reflow content in the layout as each image is loaded\n  $grid.imagesLoaded().progress(() => {\n    $grid.masonry('layout');\n  });\n\n\n  const $modals = $gallery.magnificPopup({\n    delegate: '.image-gallery__popup-launcher',\n    type: 'image',\n    mainClass: 'mfp-fade',\n    tLoading: 'Loading image #%curr%...',\n    gallery: {\n      enabled: true\n    },\n    navigateByImgClick: true,\n    preload: [0, 1],\n    image: {\n      tError: '<a href=\"%url%\">The image #%curr%</a> could not be loaded.',\n      verticalFit: false,\n      titleSrc: (item) => {\n        return $(item.el).find('figcaption').html();\n      }\n    }\n  });\n\n  $modals.on('mfpResize mfpImageLoadComplete mfpChange mfpOpen', (e) => {\n    if ($.magnificPopup.instance) {\n      fitCaption($.magnificPopup.instance.content);\n    }\n  });\n};\n"]}